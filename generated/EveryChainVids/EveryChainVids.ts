// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CommentAdded extends ethereum.Event {
  get params(): CommentAdded__Params {
    return new CommentAdded__Params(this);
  }
}

export class CommentAdded__Params {
  _event: CommentAdded;

  constructor(event: CommentAdded) {
    this._event = event;
  }

  get text(): string {
    return this._event.parameters[0].value.toString();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class VideoUploaded extends ethereum.Event {
  get params(): VideoUploaded__Params {
    return new VideoUploaded__Params(this);
  }
}

export class VideoUploaded__Params {
  _event: VideoUploaded;

  constructor(event: VideoUploaded) {
    this._event = event;
  }

  get assetId(): string {
    return this._event.parameters[0].value.toString();
  }

  get title(): string {
    return this._event.parameters[1].value.toString();
  }

  get videoUrl(): string {
    return this._event.parameters[2].value.toString();
  }

  get description(): string {
    return this._event.parameters[3].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get views(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class EveryChainVids__videosResult {
  value0: string;
  value1: string;
  value2: string;
  value3: string;
  value4: Address;
  value5: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: string,
    value4: Address,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getAssetId(): string {
    return this.value0;
  }

  getTitle(): string {
    return this.value1;
  }

  getVideoUrl(): string {
    return this.value2;
  }

  getDescription(): string {
    return this.value3;
  }

  getCreator(): Address {
    return this.value4;
  }

  getViews(): BigInt {
    return this.value5;
  }
}

export class EveryChainVids extends ethereum.SmartContract {
  static bind(address: Address): EveryChainVids {
    return new EveryChainVids("EveryChainVids", address);
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  videoCount(): BigInt {
    let result = super.call("videoCount", "videoCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_videoCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("videoCount", "videoCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  videos(param0: Bytes): EveryChainVids__videosResult {
    let result = super.call(
      "videos",
      "videos(bytes32):(string,string,string,string,address,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new EveryChainVids__videosResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toAddress(),
      result[5].toBigInt()
    );
  }

  try_videos(param0: Bytes): ethereum.CallResult<EveryChainVids__videosResult> {
    let result = super.tryCall(
      "videos",
      "videos(bytes32):(string,string,string,string,address,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EveryChainVids__videosResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toAddress(),
        value[5].toBigInt()
      )
    );
  }
}

export class AddCommentCall extends ethereum.Call {
  get inputs(): AddCommentCall__Inputs {
    return new AddCommentCall__Inputs(this);
  }

  get outputs(): AddCommentCall__Outputs {
    return new AddCommentCall__Outputs(this);
  }
}

export class AddCommentCall__Inputs {
  _call: AddCommentCall;

  constructor(call: AddCommentCall) {
    this._call = call;
  }

  get _hash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _text(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class AddCommentCall__Outputs {
  _call: AddCommentCall;

  constructor(call: AddCommentCall) {
    this._call = call;
  }
}

export class UpdateViewsCall extends ethereum.Call {
  get inputs(): UpdateViewsCall__Inputs {
    return new UpdateViewsCall__Inputs(this);
  }

  get outputs(): UpdateViewsCall__Outputs {
    return new UpdateViewsCall__Outputs(this);
  }
}

export class UpdateViewsCall__Inputs {
  _call: UpdateViewsCall;

  constructor(call: UpdateViewsCall) {
    this._call = call;
  }

  get _hash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class UpdateViewsCall__Outputs {
  _call: UpdateViewsCall;

  constructor(call: UpdateViewsCall) {
    this._call = call;
  }
}

export class UploadVideoCall extends ethereum.Call {
  get inputs(): UploadVideoCall__Inputs {
    return new UploadVideoCall__Inputs(this);
  }

  get outputs(): UploadVideoCall__Outputs {
    return new UploadVideoCall__Outputs(this);
  }
}

export class UploadVideoCall__Inputs {
  _call: UploadVideoCall;

  constructor(call: UploadVideoCall) {
    this._call = call;
  }

  get _hash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _assetId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _title(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _videoUrl(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class UploadVideoCall__Outputs {
  _call: UploadVideoCall;

  constructor(call: UploadVideoCall) {
    this._call = call;
  }
}
